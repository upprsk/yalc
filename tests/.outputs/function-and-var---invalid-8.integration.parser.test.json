{"data":{"children":[{"args":{"kind":"NodePack","loc":"19-21@FileId(0)"},"attached_type":"","attributes":null,"body":{"children":[{"inits":{"children":[{"kind":"Int","loc":"33-35@FileId(0)","value":10}],"kind":"NodePack","loc":"33-35@FileId(0)"},"kind":"Var","loc":"25-36@FileId(0)","names":{"children":[{"kind":"Id","loc":"29-30@FileId(0)","name":"x"}],"kind":"NodePack","loc":"29-30@FileId(0)"},"types":null}],"kind":"Block","loc":"23-36@FileId(0)"},"gargs":null,"is_c_varargs":false,"kind":"Func","loc":"13-36@FileId(0)","name":"f","ret":{"kind":"NodePack","loc":"22-23@FileId(0)"}}],"kind":"File","loc":"0-36@FileId(0)","module_name":"main"},"out":":memory:function and var - invalid 8:2:11: error: expected expression, but got '{'\n  0001 | module main;\n> 0002 | func f() ({\n                   ^\n  0003 | var x = 10;\n:memory:function and var - invalid 8:2:11: error: expected ',', but got '{'\n  0001 | module main;\n> 0002 | func f() ({\n                   ^\n  0003 | var x = 10;\n:memory:function and var - invalid 8:2:11: note: expected ',' to separate return value types\n  0001 | module main;\n> 0002 | func f() ({\n                   ^\n  0003 | var x = 10;\n:memory:function and var - invalid 8:2:11: error: expected ')', but got '{'\n  0001 | module main;\n> 0002 | func f() ({\n                   ^\n  0003 | var x = 10;\n:memory:function and var - invalid 8:2:11: note: expected ')' after function return value types\n  0001 | module main;\n> 0002 | func f() ({\n                   ^\n  0003 | var x = 10;\n:memory:function and var - invalid 8:4:1: error: expected '}', but got 'EOF'\n  0003 | var x = 10;\n> 0004 | \n         \n"}