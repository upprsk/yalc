{"stdout":"type :slice = { l 2 }\n\ntype :struct_0 = { w, l, }\n\nfunction $main_shift(l %l0, ) {\n@start\n@b0\n    %l1 =w loadsw %l0\n    %l2 =w copy 1\n    %l3 =w sub %l1, %l2\n    storew %l3, %l0\n    %at5 =l add %l0, 8\n    %l5 =l loadl %at5\n    %l6 =l copy 8\n    %l7 =l add %l5, %l6\n    %at8 =l add %l0, 8\n    storel %l7, %at8\n    ret\n}\nfunction $main_print_args(l %l0, ) {\n@start\n@b0\n    %l1 =w copy 0\n    %l2 =w copy %l1\n    jmp @b1\n@b1\n    %l3 =w loadsw %l0\n    %l4 =w csltw %l2, %l3\n    jnz %l4, @b2, @b3\n@b2\n    %l5 =l alloc8 16\n    %l6 =l copy $str_0\n    storel %l6, %l5\n    %l8 =l copy 15\n    %at9 =l add %l5, 8\n    storel %l8, %at9\n    %l10 =l loadl %l5\n    %at11 =l add %l0, 8\n    %l11 =l loadl %at11\n    %l12 =l extsw %l2\n    %l13 =l copy 8\n    %l14 =l mul %l12, %l13\n    %l15 =l add %l11, %l14\n    %l16 =l loadl %l15\n    call $printf(l %l10, w %l2, l %l16, )\n    %l18 =w copy 1\n    %l19 =w add %l2, %l18\n    %l2 =w copy %l19\n    jmp @b1\n@b3\n    ret\n}\nexport function w $main(w %l0, l %l1, ) {\n@start\n@b0\n    %l2 =l alloc8 16\n    storew %l0, %l2\n    %at4 =l add %l2, 8\n    storel %l1, %at4\n    %l5 =l copy %l2\n    %l6 =l copy %l5\n    call $main_shift(l %l6, )\n    %l8 =l copy %l5\n    call $main_print_args(l %l8, )\n    %l10 =w copy 0\n    ret %l10\n}\ndata $str_0 = { b \"- args[%d]: %s\\n\", b 0 }\n"}