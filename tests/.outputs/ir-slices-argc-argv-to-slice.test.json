{"stdout":"export func \"main\"(%0: i32, %1: ptr) i32 {\n@0\n    %2 = Alloca<Slice> 16/8\n    %3 = IntConst<usize> 1\n    %4 = IntConst<usize> 8\n    %5 = Mul<usize> %3, %4\n    %6 = Add<ptr> %1, %5\n    %6 = Add<ptr> %1, %5\n    %7 = Ext<isize> %0\n    %8 = Sub<usize> %7, %3\n    %9 = Copy<ptr> %6\n    Store +0, %2, %9\n    Store +8, %2, %8\n    %12 = Copy<Slice> %2\n    %13 = IntConst<usize> 0\n    %14 = Copy<usize> %13\n    jmp @1\n@1\n    %15 = Load<usize> +8, %12\n    %16 = Lt<u8> %14, %15\n    branch %16, @2 @3\n@2\n    %17 = Alloca<string_view> 16/8\n    %18 = StrConst<ptr> 0\n    Store +0, %17, %18\n    %20 = IntConst<usize> 14\n    Store +8, %17, %20\n    %22 = Load<ptr> +0, %17\n    %23 = Load<ptr> +0, %12\n    %24 = IntConst<usize> 8\n    %25 = Mul<usize> %14, %24\n    %26 = Add<ptr> %23, %25\n    %27 = Load<ptr> +0, %26\n    CallVoid printf(%22, %14, %27)\n    %29 = IntConst<usize> 1\n    %30 = Add<usize> %14, %29\n    SetTmp %14, %30\n    jmp @1\n@3\n    %32 = IntConst<i32> 0\n    ret %32\n}\nextern func \"printf\"(%0: ptr);\ndata $str_0 = \"args[%d] = %s\\n\"\n"}