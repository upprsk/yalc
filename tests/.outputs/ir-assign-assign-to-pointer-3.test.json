{"stdout":"extern func \"printf\"(%0: ptr);\nexport func \"main\"(%0: i32, %1: ptr) i32 {\n@0\n    %2 = IntConst<i32> 33\n    %3 = IntConst<i32> 36\n    %4 = Add<i32> %2, %3\n    %5 = Alloca<ptr> 4\n    Store %5, %4\n    %7 = IntConst<i32> 400\n    %8 = IntConst<i32> 20\n    %9 = Add<i32> %7, %8\n    %10 = Alloca<ptr> 4\n    Store %10, %9\n    %12 = Copy<ptr> %5\n    %13 = StrConst<ptr> 0\n    %14 = Load<i32> %5\n    %15 = Load<i32> %10\n    %16 = Load<i32> %12\n    CallVoid printf(%13, %14, %15, %16, %12)\n    SetTmp %12, %10\n    %19 = StrConst<ptr> 1\n    %20 = Load<i32> %5\n    %21 = Load<i32> %10\n    %22 = Load<i32> %12\n    CallVoid printf(%19, %20, %21, %22, %12)\n    %24 = IntConst<i32> 42\n    Store %12, %24\n    %26 = StrConst<ptr> 2\n    %27 = Load<i32> %5\n    %28 = Load<i32> %10\n    %29 = Load<i32> %12\n    CallVoid printf(%26, %27, %28, %29, %12)\n    %31 = IntConst<i32> 0\n    ret %31\n}\ndata $str_0 = \"x=%d, y=%d, p=%d @ %p\\n\"\ndata $str_1 = \"x=%d, y=%d, p=%d @ %p\\n\"\ndata $str_2 = \"x=%d, y=%d, p=%d @ %p\\n\"\n"}