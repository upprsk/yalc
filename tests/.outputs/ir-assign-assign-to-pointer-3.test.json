{"stdout":"extern func \"printf\"(%0: ptr);\nexport func \"main\"(%1: i32, %2: ptr) i32 {\n@0\n    %3 = IntConst<i32> 33\n    %4 = IntConst<i32> 36\n    %5 = Add<i32> %3, %4\n    %6 = Alloca<ptr> 4\n    Store %6, %5\n    %8 = IntConst<i32> 400\n    %9 = IntConst<i32> 20\n    %10 = Add<i32> %8, %9\n    %11 = Alloca<ptr> 4\n    Store %11, %10\n    %13 = Copy<ptr> %6\n    %14 = StrConst<ptr> 0\n    %15 = Load<i32> %6\n    %16 = Load<i32> %11\n    %17 = Load<i32> %13\n    CallVoid printf(%14, %15, %16, %17, %13)\n    SetTmp %13, %11\n    %20 = StrConst<ptr> 1\n    %21 = Load<i32> %6\n    %22 = Load<i32> %11\n    %23 = Load<i32> %13\n    CallVoid printf(%20, %21, %22, %23, %13)\n    %25 = IntConst<i32> 42\n    Store %13, %25\n    %27 = StrConst<ptr> 2\n    %28 = Load<i32> %6\n    %29 = Load<i32> %11\n    %30 = Load<i32> %13\n    CallVoid printf(%27, %28, %29, %30, %13)\n    %32 = IntConst<i32> 0\n    ret %32\n}\ndata $str_0 = \"x=%d, y=%d, p=%d @ %p\\n\"\ndata $str_1 = \"x=%d, y=%d, p=%d @ %p\\n\"\ndata $str_2 = \"x=%d, y=%d, p=%d @ %p\\n\"\n"}