{"stdout":"extern func \"printf\"(%0: ptr);\nexport func \"main\"(%0: i32, %1: ptr) i32 {\n@0\n    %2 = Alloca<struct> 16\n    %3 = IntConst<usize> 0\n    %4 = Add<ptr> %2, %3\n    Store %4, %0\n    %6 = IntConst<usize> 8\n    %7 = Add<ptr> %2, %6\n    Store %7, %1\n    %9 = Copy<struct> %2\n    CallVoid main_Args_shift(%9)\n    CallVoid main_Args_print_args(%9)\n    %12 = IntConst<i32> 0\n    ret %12\n}\nfunc \"main_Args_print_args\"(%0: ptr) {\n@0\n    %1 = IntConst<i32> 0\n    %2 = Copy<i32> %1\n    jmp @1\n@1\n    %3 = IntConst<usize> 0\n    %4 = Add<ptr> %0, %3\n    %5 = Load<i32> %4\n    %6 = Lt<u8> %2, %5\n    branch %6, @2 @3\n@2\n    %7 = Alloca<string_view> 16\n    %8 = StrConst<ptr> 0\n    Store %7, %8\n    %10 = IntConst<usize> 8\n    %11 = Add<usize> %7, %10\n    %12 = IntConst<usize> 15\n    Store %11, %12\n    %14 = Load<ptr> %7\n    %15 = IntConst<usize> 8\n    %16 = Add<ptr> %0, %15\n    %17 = Load<ptr> %16\n    %18 = Ext<isize> %2\n    %19 = IntConst<isize> 8\n    %20 = Mul<isize> %18, %19\n    %21 = Add<ptr> %17, %20\n    %22 = Load<ptr> %21\n    CallVoid printf(%14, %2, %22)\n    %24 = IntConst<i32> 1\n    %25 = Add<i32> %2, %24\n    SetTmp %2, %25\n    jmp @1\n@3\n    ret\n}\nfunc \"main_Args_shift\"(%0: ptr) {\n@0\n    %1 = IntConst<usize> 0\n    %2 = Add<ptr> %0, %1\n    %3 = Load<i32> %2\n    %4 = IntConst<i32> 1\n    %5 = Sub<i32> %3, %4\n    %6 = IntConst<usize> 0\n    %7 = Add<ptr> %0, %6\n    Store %7, %5\n    %9 = IntConst<usize> 8\n    %10 = Add<ptr> %0, %9\n    %11 = Load<ptr> %10\n    %12 = IntConst<usize> 8\n    %13 = Add<usize> %11, %12\n    %14 = IntConst<usize> 8\n    %15 = Add<ptr> %0, %14\n    Store %15, %13\n    ret\n}\ndata $str_0 = \"- args[%d]: %s\\n\"\n"}