{"stdout":"export func \"main\"() i32 {\n@0\n    %0 = Alloca<Array> 12/4\n    %1 = IntConst<i32> 1\n    Store +0, %0, %1\n    %3 = IntConst<i32> 2\n    Store +4, %0, %3\n    %5 = IntConst<i32> 3\n    Store +8, %0, %5\n    %7 = Copy<Array> %0\n    %8 = IntConst<usize> 0\n    %9 = Copy<usize> %8\n    jmp @1\n@1\n    %10 = IntConst<usize> 3\n    %11 = Lt<u8> %9, %10\n    branch %11, @2 @3\n@2\n    %12 = Alloca<string_view> 16/8\n    %13 = StrConst<ptr> 0\n    Store +0, %12, %13\n    %15 = IntConst<usize> 12\n    Store +8, %12, %15\n    %17 = Load<ptr> +0, %12\n    %18 = IntConst<usize> 4\n    %19 = Mul<usize> %9, %18\n    %20 = Add<Array> %7, %19\n    %21 = Load<i32> +0, %20\n    CallVoid printf(%17, %9, %21)\n    %23 = IntConst<usize> 1\n    %24 = Add<usize> %9, %23\n    SetTmp %9, %24\n    jmp @1\n@3\n    %26 = IntConst<i32> 0\n    ret %26\n}\nextern func \"printf\"(%0: ptr);\ndata $str_0 = \"arr[%zu]=%d\\n\"\n"}