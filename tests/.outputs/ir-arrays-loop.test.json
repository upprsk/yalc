{"stdout":"extern func \"printf\"(%0: ptr);\nexport func \"main\"() i32 {\n@0\n    %0 = Alloca<Array> 12\n    %1 = IntConst<i32> 1\n    %2 = IntConst<usize> 0\n    %3 = Add<usize> %0, %2\n    Store %3, %1\n    %5 = IntConst<i32> 2\n    %6 = IntConst<usize> 4\n    %7 = Add<usize> %0, %6\n    Store %7, %5\n    %9 = IntConst<i32> 3\n    %10 = IntConst<usize> 8\n    %11 = Add<usize> %0, %10\n    Store %11, %9\n    %13 = Copy<Array> %0\n    %14 = IntConst<usize> 0\n    %15 = Copy<usize> %14\n    jmp @1\n@1\n    %16 = IntConst<usize> 3\n    %17 = Lt<u8> %15, %16\n    branch %17, @2 @3\n@2\n    %18 = Alloca<string_view> 16\n    %19 = StrConst<ptr> 0\n    Store %18, %19\n    %21 = IntConst<usize> 8\n    %22 = Add<usize> %18, %21\n    %23 = IntConst<usize> 12\n    Store %22, %23\n    %25 = Load<ptr> %18\n    %26 = IntConst<usize> 4\n    %27 = Mul<usize> %15, %26\n    %28 = Add<Array> %13, %27\n    %29 = Load<i32> %28\n    CallVoid printf(%25, %15, %29)\n    %31 = IntConst<usize> 1\n    %32 = Add<usize> %15, %31\n    SetTmp %15, %32\n    jmp @1\n@3\n    %34 = IntConst<i32> 0\n    ret %34\n}\ndata $str_0 = \"arr[%zu]=%d\\n\"\n"}