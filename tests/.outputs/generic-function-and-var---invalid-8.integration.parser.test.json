{"data":{"children":[{"args":{"kind":"NodePack","loc":"19-21@FileId(0)"},"attached_type":"","attributes":null,"gargs":{"kind":"NodePack","loc":"18-19@FileId(0)"},"is_c_varargs":false,"kind":"Func","loc":"13-25@FileId(0)","name":"","ret":{"children":[{"kind":"Id","loc":"22-25@FileId(0)","name":"i32"}],"kind":"NodePack","loc":"22-25@FileId(0)"}},{"attributes":null,"inits":{"children":[{"kind":"Int","loc":"34-36@FileId(0)","value":69}],"kind":"NodePack","loc":"34-36@FileId(0)"},"kind":"TopVar","loc":"26-37@FileId(0)","names":{"children":[{"kind":"Id","loc":"30-31@FileId(0)","name":"x"}],"kind":"NodePack","loc":"30-31@FileId(0)"},"types":null}],"kind":"File","loc":"0-37@FileId(0)","module_name":"main"},"out":":memory:generic function and var - invalid 8:2:6: error: expected 'identifier', but got '['\n  0001 | module main;\n> 0002 | func [() i32\n              ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:2:7: error: expected 'identifier', but got '('\n  0001 | module main;\n> 0002 | func [() i32\n               ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:2:7: note: expected argument name\n  0001 | module main;\n> 0002 | func [() i32\n               ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:2:7: error: expected ',', but got '('\n  0001 | module main;\n> 0002 | func [() i32\n               ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:2:7: note: expected ',' to separate generic function arguments\n  0001 | module main;\n> 0002 | func [() i32\n               ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:2:7: error: expected ']', but got '('\n  0001 | module main;\n> 0002 | func [() i32\n               ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:2:7: note: expected ']' after generic function arguments\n  0001 | module main;\n> 0002 | func [() i32\n               ^\n  0003 | var x = 69;\n:memory:generic function and var - invalid 8:3:1: error: expected ';' or '{', but got 'var'\n  0002 | func [() i32\n> 0003 | var x = 69;\n         ^^^\n  0004 | \n"}