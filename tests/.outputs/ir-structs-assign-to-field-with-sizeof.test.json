{"stdout":"extern func \"printf\"(%0: ptr);\nfunc \"main_shift\"(%0: ptr) {\n@0\n    %1 = Load<i32> +0, %0\n    %2 = IntConst<i32> 1\n    %3 = Sub<i32> %1, %2\n    Store +0, %0, %3\n    %5 = Load<ptr> +8, %0\n    %6 = IntConst<usize> 8\n    %7 = Add<usize> %5, %6\n    Store +8, %0, %7\n    ret\n}\nfunc \"main_print_args\"(%0: ptr) {\n@0\n    %1 = IntConst<i32> 0\n    %2 = Copy<i32> %1\n    jmp @1\n@1\n    %3 = Load<i32> +0, %0\n    %4 = Lt<u8> %2, %3\n    branch %4, @2 @3\n@2\n    %5 = Alloca<string_view> 16/8\n    %6 = StrConst<ptr> 0\n    Store +0, %5, %6\n    %8 = IntConst<usize> 15\n    Store +8, %5, %8\n    %10 = Load<ptr> +0, %5\n    %11 = Load<ptr> +8, %0\n    %12 = Ext<isize> %2\n    %13 = IntConst<isize> 8\n    %14 = Mul<isize> %12, %13\n    %15 = Add<ptr> %11, %14\n    %16 = Load<ptr> +0, %15\n    CallVoid printf(%10, %2, %16)\n    %18 = IntConst<i32> 1\n    %19 = Add<i32> %2, %18\n    SetTmp %2, %19\n    jmp @1\n@3\n    ret\n}\nexport func \"main\"(%0: i32, %1: ptr) i32 {\n@0\n    %2 = Alloca<struct> 16/8\n    Store +0, %2, %0\n    Store +8, %2, %1\n    %5 = Copy<struct> %2\n    CallVoid main_shift(%5)\n    CallVoid main_print_args(%5)\n    %8 = IntConst<i32> 0\n    ret %8\n}\ndata $str_0 = \"- args[%d]: %s\\n\"\n"}