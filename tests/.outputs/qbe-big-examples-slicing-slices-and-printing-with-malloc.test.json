{"stdout":"type :slice = { l 2 }\n\n\nfunction w $main_read_count() {\n@start\n@b0\n    %l0 =w copy 0\n    %l1 =l alloc4 4\n    storew %l0, %l1\n    %l3 =l alloc8 16\n    %l4 =l copy $str_0\n    storel %l4, %l3\n    %l6 =l copy 7\n    %at7 =l add %l3, 8\n    storel %l6, %at7\n    %l8 =l loadl %l3\n    call $printf(l %l8, )\n    %l10 =l alloc8 16\n    %l11 =l copy $str_1\n    storel %l11, %l10\n    %l13 =l copy 2\n    %at14 =l add %l10, 8\n    storel %l13, %at14\n    %l15 =l loadl %l10\n    call $scanf(l %l15, l %l1, )\n    %l17 =w loadsw %l1\n    ret %l17\n}\nfunction $main_print_array(:slice %l0, ) {\n@start\n@b0\n    %l1 =l copy %l0\n    jmp @b1\n@b1\n    %at2 =l add %l1, 8\n    %l2 =l loadl %at2\n    %l3 =l copy 0\n    %l4 =w cultl %l3, %l2\n    jnz %l4, @b2, @b3\n@b2\n    %l5 =l alloc8 16\n    %l6 =l copy $str_2\n    storel %l6, %l5\n    %l8 =l copy 5\n    %at9 =l add %l5, 8\n    storel %l8, %at9\n    %l10 =l loadl %l5\n    %l11 =l copy 0\n    %l12 =l loadl %l1\n    %l13 =l copy 4\n    %l14 =l mul %l11, %l13\n    %l15 =l add %l12, %l14\n    %l16 =w loadsw %l15\n    call $printf(l %l10, w %l16, )\n    %l18 =l alloc8 16\n    %at19 =l add %l1, 8\n    %l19 =l loadl %at19\n    %l20 =l copy 1\n    %l21 =l loadl %l1\n    %l22 =l copy 4\n    %l23 =l mul %l20, %l22\n    %l24 =l add %l21, %l23\n    %l24 =l add %l21, %l23\n    %l25 =l sub %l19, %l20\n    %l26 =l copy %l24\n    storel %l26, %l18\n    %at28 =l add %l18, 8\n    storel %l25, %at28\n    %l1 =l copy %l18\n    jmp @b1\n@b3\n    ret\n}\nfunction $main_fill_array(:slice %l0, ) {\n@start\n@b0\n    %l1 =w copy 10\n    %l2 =w copy %l1\n    %l3 =l copy %l0\n    jmp @b1\n@b1\n    %at4 =l add %l3, 8\n    %l4 =l loadl %at4\n    %l5 =l copy 0\n    %l6 =w cultl %l5, %l4\n    jnz %l6, @b2, @b3\n@b2\n    %l7 =l copy 0\n    %l8 =l loadl %l3\n    %l9 =l copy 4\n    %l10 =l mul %l7, %l9\n    %l11 =l add %l8, %l10\n    storew %l2, %l11\n    %l13 =l alloc8 16\n    %at14 =l add %l3, 8\n    %l14 =l loadl %at14\n    %l15 =l copy 1\n    %l16 =l loadl %l3\n    %l17 =l copy 4\n    %l18 =l mul %l15, %l17\n    %l19 =l add %l16, %l18\n    %l19 =l add %l16, %l18\n    %l20 =l sub %l14, %l15\n    %l21 =l copy %l19\n    storel %l21, %l13\n    %at23 =l add %l13, 8\n    storel %l20, %at23\n    %l3 =l copy %l13\n    %l25 =w copy 10\n    %l26 =w add %l2, %l25\n    %l2 =w copy %l26\n    jmp @b1\n@b3\n    ret\n}\nfunction :slice $main_allocate_array(w %l0, ) {\n@start\n@b0\n    %l1 =l extsw %l0\n    %l2 =l copy 4\n    %l3 =l mul %l1, %l2\n    %l4 =l call $malloc(l %l3, )\n    %l5 =l alloc8 16\n    %l6 =l extsw %l0\n    %l7 =l copy %l4\n    storel %l7, %l5\n    %at9 =l add %l5, 8\n    storel %l6, %at9\n    ret %l5\n}\nexport function w $main(w %l0, l %l1, ) {\n@start\n@b0\n    %l2 =w call $main_read_count()\n    %l3 =:slice call $main_allocate_array(w %l2, )\n    call $main_fill_array(:slice %l3, )\n    call $main_print_array(:slice %l3, )\n    %l6 =w copy 0\n    %l7 =l loadl %l3\n    call $free(l %l7, )\n    ret %l6\n}\ndata $str_0 = { b \"count: \", b 0 }\ndata $str_1 = { b \"%d\", b 0 }\ndata $str_2 = { b \"- %d\\n\", b 0 }\n"}