func test_01() {
    var x = 0;
    x = x + 1 * 2;
}

// OUTPUT:
// File(void, [Func(func() void, Id({![1fffffff]}, test_01), [], Nil({![1fffffff]}), Block(void, [VarDecl(void, Id({![1fffffff]}, x), Nil({![1fffffff]}), Int(i32, 0)), Assign(void, Id({![1fffffff]}, x), Add(i32, Id(i32, x), Mul(i32, Int(i32, 1), Int(i32, 2))))]))])
// test_01: # func() void
// locals: [(0, "x", i32)]
// calls: []
// b 0:
// 0000 | Const 0 (variant(0), i32)
// 0001 | LoadLocal 0 ("x", i32)
// 0002 | Const 1 (variant(1), i32)
// 0003 | Const 2 (variant(2), i32)
// 0004 | Mul
// 0005 | Add
// 0006 | StoreLocal 0 ("x", i32)
// 
